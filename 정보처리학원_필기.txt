2023.07.25 Tue
UI(User Interface)디자인 - 사용자가 편하게 사용하게 만드는 것
UX(User Experience)디자인 - 사용자가 만족했는가(정보가 유익한가, 도움이 됐는가)
굿디자인 - 재미있고 유익한 웹/앱 사이트를 제작하는 것

*Edit - vsc
환경설정
live Server : 결과 미리보기
Auto Rename Tag : 앞뒤 태그를 같게 해줌
Elm Emmet : 빠른 코딩(자동코딩)

*단축기
ctrl + (+) : 크게 보기
ctrl + (-) : 작게 보기
shift + alt + 아래방향키 : 줄 복사
ctrl + / : 주석 처리
f11 : 전체 화면

*html5
html : 인터넷에 테이터를 표시해 주는 언어
css : html을 디자인 해 주는 언어, 디자인 방법(style - border, color, font-size: 크기를 지정하지 않으면 16px, width, height, cursor: 마우스를 올렸을 때 커서 모양 지정)
inline style : 태그 안에서 디자인 해줌
               style 속성은 태그를 꾸며줌. ex) <p style="border: 1px solid black;"> 은 1px굵기의 실선인 박스를 생성
내부 style : head 태그 안에서 원하는 종류의 태그 스타일을 모두 꾸며줄 수 있음
ex)<head>
    <style>
        td span(td 안에 있는 span을 의미) {
            color: blue;
            border : 1px solid red;
            }
    </style>
   </head>
외부 style : css이용, link태그로 연결할 수 있음. link태그의 hred 속성 안에 경로 지정하면 됨.
인라인 style > 내부 style > 외부 style 순으로 우선순위가 있음.
margin : 바깥쪽 여백
태그(명령어) : <>안에 대게 쌍으로 이루어 진것, 단독적으로 쓰이는 태그도 있음. 태그 안에 있는 옵션을 속성이라 부름.
선택자 : 특정 태그를 지정 할 수 있음. (class, id, name, tag, >, ~)
    class : .(점)으로 표시, 중복 사용이 가능함.
    > : 자식 선택자.
<!DOCTYPE html> : html5 문서임을 표시, 안써도 문제는 없지만 써주는게 좋음.
<html></html> : html 시작, lang은 언어임, eng는 영어라 영어쓸 때는 생략 가능, 쌍으로 이루어진 태그는 /로 끝을 알림.
<head></head> : 이 문서의 정보를 제공
<title></title> : 문서 제목
<meta charset="utf-8" /> : 원래 쌍이 없는 태그, 사용 코드 이름 : utf-8(유니코드) 전 세게 언어를 표현 가능.
<body></body> : 본문 내용
<br> : 줄 바꿈 태그
<p></p>: 문장 태그, 자동 줄 바꿈(2줄), p태그 안에는 p태그나 div태그가 못 들어감.
<span></span> : 글자 태그
<pre></pre> : 작성한 그대로 html에 제공되는 태그
<img src="" alt=""> : scr 속성은 경로를 의미. src 속성에 이미지가 저장된 경로를 입력하면 이미지가 출력되는 태그
                      alt 속성에는 scr 속성에 의미 없는 경로가 지정될 경우 대체 출력할 텍스트를 입력
                      title 속성은 마우스를 이미지에 올렸을 때 나올 설명을 작성
<table></table> : 표 만들기, cellspacing/cellpadding 속성으로 칸 사이의 간격 조정
    <thead></thead> : 테이블의 정보
    <tbody></tbody> : 테이블의 본문
        <tr></tr> : 줄 만들기
            <td></td> : 칸 만들기. colspan속성을 이용해 칸 병합 가능 ex)colspan="4" 은 4칸 셀 병합
                                  rowspan속성을 이용해 줄 병합 가능.
    <caption></caption> : 표 이름

2023.07.26 Wed
<div></div> : 항목 구분 태그(공간 구분 태그). 클래스만 생성하면 기본으로 div가 생성됨.
              p태그와 다른점은 자동 줄 바꿈이 한번만 이루어지고 p태그나 div태그가 들어갈 수 있음.
              부모div에 display: flex;를 통해 inline으로 변경 가능.
              justify-content: 를 통해 여러 배치가 가능.
inline 요소 : 한 줄에 여러 개의 태그가 온다. (span, img, a, small 등)
block 요소 : 한 줄에 하나의 태그만 온다. (p, div, li, ul 등)
             | inline 요소         block 요소
-------------|--------------------------------------
width        |     X                   O
height       |     X                   O
margin-top   |     X                   O
margin-left  |     O                   O
----------------------------------------------------
* : 모든 기본 태그를 뜻 함. ex) *{margin: 0;} 은 모든 태그의 margin을 0으로 만듦.
    * {margin: 0; list-style: none; padding: 0; text-decoration:none ;} 은 기본으로 입력해 두는 것이 좋음.
inherit : 부모의 정보를 상속 받음 ex) height: inherit; 은 height: 100%;와 정확히 일치함.
rem : 글자크기의 기본 단위. 1rem = 16px. 이것은 임의로 지정한 html의 px에 따라 달라짐.
background에 이미지를 넣을 수 있음. ex) background: url(경로지정); 여기서 ../은 현재 디렉토리에서 나간다는 의미.
opacity : 투명도 조절 0~1.
text-indent : 글자 들여쓰기.

2023.07.27 Thu
display : 태그의 구조를 바꿀 수 있음. (flex, inline, block, inline-block: inline으로 변경하되 block의 속성을 유지하라. 등)
<ol></ol>(order list) : 순서 있는 목록 태그.
<ul></ul>(unorder list) : 순서 없는 목록 태그.
<li></li> : ol과 ul태그 안에 반드시 포함 되어야 하는 태그.
            list-style : 앞의 기호를 없앨 수 있음.
position : 위치를 지정하는 속성(absolute, fixed, relative), top, left, right, bottom, z-index(레이어 개념으로 위/아래(레벨) 설정 가능.)을 지정 할 수 있음.
           자식 태그에 position을 설정하려면 부모 태그에도 position이 있어야 함.(없으면 자식 태그들은 부모를 벗어남.)
    absolute : 절대 주소 - 기준은 부모 태그, 설정하면 다른 태그 위에 있음.
    fixed : 고정된 주소 - 기준은 왼쪽/위쪽(0,0), 설정하면 다른 태그 위에 있음.
    relative : 상대 주소 - 기준은 자기 자리
<video></video> : 비디오를 열어주는 태그, autoplay속성을 통해 자동 재생가능, loop속성을 통해 반복횟수 설정 가능, contrels속성을 통해 재생버튼 생성, muted속성으로 시작시 음소거 가능
    <source /> : 단독 태그이고 src속성을 통해 video태그의 경로를 지정해 줌. type속성을 통해 재생할 video의 확장자를 알려줘야 함.
transform : 태그의 정보를 새롭게 지정할 수 있음 ex) transform: translateX(-50%); 은 x축으로 -50%만큼 이동한 것임.
id : #으로 표시함, class와 다르게 중복 불가능함, js에서 사용 가능함.
onclick(js언어) : 태그 클릭시 출력을 만들어 줌. ex) <div onclick="vid.style.display='none'"> 은 div태그를 클릭시 vid라는 이름의 id를 가진 태그를 없애는 문법임.

2023.07.28 Fri
<a></a> : (문서)연결 태그, 자동으로 커서가 바뀜, 밑줄이 그어짐, 글자색이 파랑색으로 됨.
          ex) <a href="http://kbs.co.kr" target="_blank">문서 연결 태그</a> 은 "문서 연결 태그" 클릭시 http://kbs.co.kr가 열리고 target을 통해 어느 창에 열지 설정할 수 있음.
<iframe></iframe> : 작은 화면 태그.
name : js에서 전용으로 사용되는 선택자. iframe의 이름은 반드시 name으로 선택해야 a태그의 target으로 지정할 수 있음.
overflow : 부모의 크기를 넘었을 때의 상태를 지정.
transition : transform하는데 걸리는 시간을 조정.
align-items : margin을 사용하지 않고 정렬 가능함.

2023.07.31 Mon
시멘틱태그 : 의미있는 태그들
    <header></header> : 제목 태그
    <nav></nav> : 메뉴 태그
    <section></section> : 본문 내용 태그
    <article></article> : 상세 내용 태그
    <footer></footer> : 꼬리말 태그(회사주소, 전화번호 등)
    <aside></aside> : 광고/배너 태그
<small></small> : 부모태그에서 설정한 글자 크기보다 조금 작은 태그
웹폰트 : 인터넷 상에서 웹아이콘 제공(구글)

2023.08.01 Tue
animation : 움직임
    from / 0% : 움직임의 시작
    to / 100% : 움직임의 끝
subLeft : 카멜 표기법
SubLeft : 파스칼 표기법
sub_left : 언더스코어 표기법

2023.08.03 Thu (Js 시작, jQuery라는 라이브러리 사용.)
JavaScript : 웹브라우저의 이벤트를 제어하는 프로그램. Html과 함께 사용함.
    Js 실행 후 Html을 실행함.
alert("") : ""안에 입력한 내용을 html에 알림을 보내는 api.

데이터 종류 : 원시 데이터형, 오브젝트 데이터형
    원시 데이터형(type) : 더 이상 분해 할 수 없음.
        1. Number : 숫자
        2. String : 문자
        3. Boolean : 명제
        4. Undefined : 값이 지정되지 않은 상태
        5. Null : 값의 존재조차 모르는 상태
    오브젝트 데이터형(type) : 원시 데이터의 모임.
        1. Array : 배열
        2. Object : 객체
        3. Class, Interface 등등

변수 선언법
    1. var : any타입. 어떤 값이든 저장 가능.
    2. let : 같은 타입 데이터만 입력.
    3. const : 상수 값을 지정.

Js 기본 문법
    1. 한 문장의 끝에는 항상 ; 을 입력.
    2. 대, 소문자를 구분함.
    3. 주석

2023.08.07 Mon
배열 : 같은 타입의 데이터를 순서대로 기억시키는 기억장소의 집합.
    첨자 : 배열안에 있는 index. [](대괄호) 사용해서 지정.
    문자열 배열 : [](대괄호) 사용.
API(Application Programing Interface) : 프로그램 작정 도와주는 프로그램들.
    JAVA API : 클래스 패키지
    Js API : 라이브러리(jQuery, React 등), 프레임워크
        jQuery : html에 script 시에 반드시 Js 보다 위에 있어야 함.
            .attr() : 속성을 바꿔라
            .html() : 텍스트 바꿔라
            div:nth-child(i + 1)은 div:eq(i) 와 정확히 일치
2023.08.08 Tue
    new Intl.NumberFormat('ko') : 숫자 표시방식을 한국식으로 표기함. ex) const Num = new Intl.NumberFormat('ko'); Num.format(10000)은 10,000으로 출력됨.

2023.08.09 Wed
setInterval(함수명, 시간) : 일정 시간마다 반복 실행 해 주는 함수. 1000이 1초.
함수 = 내장함수와 사용자정의함수가 있음.
jQuery에서 animation은 ex) $().animate({"left":"-1000px", 500}) 처럼 사용할 수 있음.
$("any").appendTo("where") = any를 잘라서 where뒤에 이어붙여라.

2023.08.10 Thu
function : 실행문을 저장한 코드 모임
    함수 선언 : function 함수명() {
                        실행문..
                }
    함수 기능 : 반복작업을 수행, 데이터 전달, 재활용이 가능, 프로그램을 삭제, 수정, 유지보수에 용이.
내장함수 : ex) .replace('a', 'b'); - .replace안에 있는 문자열 객체의 문자 a를 문자 b로 교체하라는 함수.
선언적함수 : 함수에 이름이 있는 함수.
익명함수 : 함수에 이름이 없는 함수. 변수에 함수를 지정할 때 사용
Return함수 : 결과값을 돌려주는 함수. 1개만 Return함.
화살표함수 : 익명함수인 let a = function() {}와 화살표함수인 let a = () => {}은 정확히 일치함.
콜백함수 : 뒤에서 실행되는 함수. 파라미터가 함수인 함수.

2023.08.16 Wed
JAVA 호칭
    JDK : 개발도구
    JRE : 실행ghksrud
    JVM : 자바가상머신(번역: 바이트)
class : 자바를 구성하는 틀. 자바는 class 중심으로 처리됨. 객체를 생성할 수 있는 형태.
    3가지 구성요소
        필드(속성) : 클래스에 포함된 변수
        메소트(Method) : 클래스 안에 있는 함수
        생성자(Constructor) : 객체가 만들어 질때 초기값 전달
java Project : 전체 작업
    package : 작업 묶음
        Class : 객체 생성 형태
            속성 : 상태값
            Method : 실행
System.(클래스)out.(필드).println()(메소드)
java api documentation : java api들을 볼 수 있음.
System.out.printf : %d - 정수, %f - 실수, %c - 문자, %s - 문자열, %b - 논리
리터럴 : 표현값(Value) - 정수, 실수, 문자, 문자열, 논리값
    정수 리터럴 : 10진수, 8진수, 16진수, 2진수
    실수 리터럴 : 소수점형태, 지수형태, double 타입
    상수 리터럴 : 정해진 값 final로 선언. 이름은 대문자로 사용
Scanner 클래스는 java.util 패키지 안에 있음.
    .next() : 공백 이전까지 입력된 문자열을 읽음.
    .nextInt() : 공백 이전까지 입력된 정수를 읽음.
    .nextFloat() : 공백 이전까지 입력된 실수를 읽음.
java.lang 패키지 내용 : 가장 기본적인 클래스들이 들어있음.
    Object 클래스 : 자바의 최상위 클래스
        hashCoode() : 객체의 해시코드를 리턴
        equals(Object obj) : 객체의 주소를 비교
    System 클래스 : JVM 번역 일부 기능 사용
        필드 : out, err, in
        메소드 : exit(int status) - 프로그램 종료
                currentTimeMills() - 현재 시간을 밀리초 단위를 long 데이터타입으로 리턴
    String 클래스 : 객체를 생성해서 사용
        메소드 : append() - 문자열 끝에 추가
                insert() / delete()
                toString() - 객체 문자 정보를 리턴
                replace(시작위치, 끝 위치, 문자열)
    Math 클래스 : 수학 클래스
        메소드 : Math.abs() - 절대값
                Math.ceil() - 올림
                Math.floor() - 내림
                Math.round() - 반올림
                Math.max() - 가장 큰 값
                Math.min() - 가장 작은 값
                Math.random() - 난수 발생(0~1의 숫자)
메소드 : 실행 가능한 프로그램
1. 클래스 내부, 외부, 생성자 등에서 호출 해야만 실행
2. 클래스 내부에서 호출은 메소드명(); 으로 호출
3. 클래스 외부에서 호출은 인스턴스를 통해서 호출(참조변수)
4. 내부 메소드는 클래스의 멤버함수로 존재함.

2023.08.18 Fri
클래스 : 객체 생성 형태
    구성 - 멤버변수, 멤버함수
객체 : 속성과 메소드로 처리
인스턴스 : 클래스가 생성한 객체, 즉 실제값
메소드 : 실행하는 것
자료형 : 기본형(Primitive) - 정수, 실수, 문자, 논리
        참조형(Reference) - 주소(메모리), 메소드를 사용하기 위해 기본형을 객체로 취급는 클래스들 ex) 객체.length(), 객체.toString() 등등
        래퍼클래스(Wrapper) - 기본형으로 객체를 생성할 수 있게 만든 참조형의 모임
        BigDecimal - 소수점을 다루는 연산(정확한 결과), 전달 인수는 반드시 문자열, compareTo 라는 메소드로 값을 비교

2023.08.21 Mon
static영역(메소드영역) : 프로그램 시작부터 끝까지 가지고 있는 것.
Stack영역 : 스코프(중괄호) 탈출하면 메모리에서 사라짐. 내용(지역변수, 매개변수, 기본데이터형)
Heap영역 : 동적할당(실행하면서) 사용되는 영역, 참조형(배열, String, 인스턴스) 등이 저장되는 공간, 단 레퍼런스 변수는 Stack에 저장됨.
배열(Array) : 같은 타입의 데이터를 순서대로 저장하는 기억장소
정규 표현식
    String.format("%,d", 1234) : 1,234. 한국식 숫자표현
    .trim() : 문자열 좌우 공백 제거
    .subString(i, j) : 인덱스넘버 i번째 문자부터 j번째 문자 전까지 출력
    .split(" +") : 공백이 한개 이상일 때 구분해서 배열 생성
    .matches("") : 일치하는 것이 1개 있는지 묻는 논리
    .matches(""+) : 일치하는 것이 1개 이상 있는지 묻는 논리
    String.join(", ", A) : A배열의 인덱스 사이에 , 를 추가해서 출력해라
    a.compareTo(b) : 비교해서 일치하면 0출력. a가 더 크면 양수, b가 더 크면 음수
    .startsWith("") : 첫 글자를 비교하는 논리
    .endsWith("") : 마지막 글자를 비교하는 논리
    for(데이터타입 변수 : 배열) : 배열 항목 반복문을 위한 for문
내부클래스 : 객체 생성 없이도 사용 가능. 상위 클래스 안에서만 사용되기 때문에 보안(캡슐화)이 가능. 모든 접근제어자 사용 가능. static해야 함.

2023.08.22 Tue
생성자 : 객체가 만들어 질 때 초기값을 위해 실행되는 메소드

2023.08.23 Wed
상속 : 부모 클래스의 필드를 자식 클래스에서 사용 가능하게 하는 것

2023.08.25 Fri
객체 지향 프로그램(Object Oriented Programming, OOP)
사용 목적 : 재활용, 유지보수가 쉬움. 확장성이 좋음.
접근제어자 : public | private | protected        | default
            공용    | 비공개  | 상속 범위 내 공개 | 같은 패키지 내 공개

2023.08.28 Mon
기본타입 8개
    정수형 : byte(1), short(2), int(4), long(8)
    실수형 : float(4), double(8)
    논리형 : boolean(1)
    문자형 : char(2)
System.identityHashCode(참조형) : 참조형의 주소값을 출력함.
객체 : 속성(값, 필드, property, attribute), 기능(메소드, 함수, 액션)